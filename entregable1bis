#include <iostream>
#include <vector>
#include <string>
#include <tuple>
#include <algorithm>

using namespace std;

//devuelvo un par de vectores donde uno sea de atacantes y otro de defensores
//tengo que hacer una funcion que me ordene por orden alfabetico

bool compararTuplas(const tuple<string, int, int>& a, const tuple<string, int, int>& b) {
    return get<0>(a) < get<0>(b);
}


pair<vector<string>,vector<string>> formacion(vector<tuple<string,int,int>> jugadores,int pAtacante, int pDefensor,int mejorAtac,vector<string> atacantes,vector<string> defensores,int i){

    if(i == jugadores.size()){
        return make_pair(atacantes,defensores);
    }else if(get<1>(jugadores[i]) + pAtacante > mejorAtac && atacantes.size()<5){
        atacantes.push_back(get<0>(jugadores[i]));
        pAtacante = pAtacante+get<1>(jugadores[i]);
        mejorAtac = pAtacante;
        return formacion(jugadores, pAtacante, pDefensor, mejorAtac, atacantes, defensores, i + 1);
    }else{
        defensores.push_back(get<0>(jugadores[i]));
        pDefensor = pDefensor + get<2>(jugadores[i]);
        return formacion(jugadores, pAtacante, pDefensor, mejorAtac, atacantes, defensores, i + 1);
    }

}

int main() {
    vector<tuple<string, int, int>> jugs;
    tuple<string, int, int> jug1 = {"sameezahur", 20, 21};
    tuple<string, int, int> jug2 = {"sohelh", 18, 9};
    tuple<string, int, int> jug3 = {"jaan", 17, 86};
    tuple<string, int, int> jug4 = {"sidky", 16, 36};
    tuple<string, int, int> jug5 = {"shamin",16,18};
    tuple<string, int, int> jug6 = {"shadowcoder",12,9};
    tuple<string, int, int> jug7 = {"muntasir",13,4};
    tuple<string, int, int> jug8 = {"brokenarrow",16,16};
    tuple<string, int, int> jug9 = {"emotionalblind",16,12};
    tuple<string, int, int> jug10 = {"tanaeem",20,97};



    jugs.push_back(jug1);
    jugs.push_back(jug2);
    jugs.push_back(jug3);
    jugs.push_back(jug4);
    jugs.push_back(jug5);
    jugs.push_back(jug6);
    jugs.push_back(jug7);
    jugs.push_back(jug8);
    jugs.push_back(jug9);
    jugs.push_back(jug10);

    vector<string> def;
    vector<string> atac;

    std::sort(jugs.begin(), jugs.end(), compararTuplas);

    pair<vector<string>, vector<string>> answer = formacion(jugs, 0, 0, 0, atac, def,0);
    cout << "Atacantes: ";
    for (const auto &nombre: answer.first) {
        cout << nombre << " ";
    }
    cout << "\nDefensores: ";
    for (const auto &nombre: answer.second) {
        cout << nombre << " ";
    }
    cout << endl;

    return 0;

}


